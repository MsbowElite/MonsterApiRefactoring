// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BattleOfMonstersContext))]
    [Migration("20240305120720_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Battles.Battle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("MonsterA")
                        .HasColumnType("uuid")
                        .HasColumnName("monster_a");

                    b.Property<Guid>("MonsterB")
                        .HasColumnType("uuid")
                        .HasColumnName("monster_b");

                    b.Property<Guid>("MonsterWinnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("monster_winner_id");

                    b.HasKey("Id")
                        .HasName("pk_battles");

                    b.HasIndex("MonsterA")
                        .HasDatabaseName("ix_battles_monster_a");

                    b.HasIndex("MonsterB")
                        .HasDatabaseName("ix_battles_monster_b");

                    b.HasIndex("MonsterWinnerId")
                        .HasDatabaseName("ix_battles_monster_winner_id");

                    b.ToTable("battles", (string)null);
                });

            modelBuilder.Entity("Domain.Monsters.Monster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Attack")
                        .HasColumnType("integer")
                        .HasColumnName("attack");

                    b.Property<int>("Defense")
                        .HasColumnType("integer")
                        .HasColumnName("defense");

                    b.Property<int>("Hp")
                        .HasColumnType("integer")
                        .HasColumnName("hp");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Speed")
                        .HasColumnType("integer")
                        .HasColumnName("speed");

                    b.HasKey("Id")
                        .HasName("pk_monsters");

                    b.ToTable("monsters", (string)null);
                });

            modelBuilder.Entity("Domain.Battles.Battle", b =>
                {
                    b.HasOne("Domain.Monsters.Monster", "MonsterARelation")
                        .WithMany()
                        .HasForeignKey("MonsterA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_battles_monsters_monster_a");

                    b.HasOne("Domain.Monsters.Monster", "MonsterBRelation")
                        .WithMany()
                        .HasForeignKey("MonsterB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_battles_monsters_monster_b");

                    b.HasOne("Domain.Monsters.Monster", "WinnerRelation")
                        .WithMany()
                        .HasForeignKey("MonsterWinnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_battles_monsters_monster_winner_id");

                    b.Navigation("MonsterARelation");

                    b.Navigation("MonsterBRelation");

                    b.Navigation("WinnerRelation");
                });
#pragma warning restore 612, 618
        }
    }
}
